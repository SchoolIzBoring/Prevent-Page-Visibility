javascript:void eval("(function () {\n    const userscripts = [\"// ==UserScript==\\n// @name        PreventPageVisibility \\n// @namespace   https://github.com/IceWreck\\n// @match       *://*/*\\n// @run-at      document-start\\n// @grant       none\\n// @version     1.1\\n// @author      IceWreck\\n// @description Block websites from knowing if you switched tabs/windows\\n \\n// ==/UserScript==\\n \\n// This userscript blocks the page visibility API and to some extent the old blur/focus APIs.\\n \\nlet events_to_block = [\\n  \\\"visibilitychange\\\",\\n  \\\"webkitvisibilitychange\\\",\\n  \\\"mozvisibilitychange\\\",\\n  \\\"hasFocus\\\",\\n  \\\"blur\\\",\\n  \\\"focus\\\",\\n  \\\"mouseleave\\\"\\n]\\n \\nfor (event_name of events_to_block) {\\n  document.addEventListener(event_name, function (event) {\\n      event.preventDefault();\\n      event.stopPropagation();\\n      event.stopImmediatePropagation();\\n  }, true);\\n}\\n \\nfor (event_name of events_to_block) {\\n  window.addEventListener(event_name, function (event) {\\n      event.preventDefault();\\n      event.stopPropagation();\\n      event.stopImmediatePropagation();\\n  }, true);\\n}\\n \\n \\ndocument.hasFocus = function () { return true; };\\ndocument.onvisibilitychange = null;\\nObject.defineProperty(document, \\\"visibilityState\\\", { value: \\\"visible\\\" });\\nObject.defineProperty(document, \\\"hidden\\\", { value: false });\\nObject.defineProperty(document, \\\"mozHidden\\\", { value: false });\\nObject.defineProperty(document, \\\"webkitHidden\\\", { value: false });\\nObject.defineProperty(document, \\\"webkitVisibilityState\\\", { value: \\\"visible\\\" });\"];\n    const includes = [[[\"*://*/*\"],[]]];\n    const ranCheckKey = \"0.043894347649997334\" + \"-\" + \"1675379169090\" + \"-userscripts-ran\";\n    const len = userscripts.length;\n\n    function run() {\n        if (window[ranCheckKey]) {\n            if (!confirm(\"Are you sure you want to run the userscripts again?\%22))%20{\n%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return;\n%20%20%20%20%20%20%20%20%20%20%20%20}\n%20%20%20%20%20%20%20%20}\n\n%20%20%20%20%20%20%20%20window[ranCheckKey]%20=%20true;\n\n%20%20%20%20%20%20%20%20//%20@ts-ignore\n%20%20%20%20%20%20%20%20window.isRunningAsBookmarkletUserscript%20=%20true;\n\n%20%20%20%20%20%20%20%20for%20(let%20i%20=%200;%20i%20%3C%20len;%20i++)%20{\n%20%20%20%20%20%20%20%20%20%20%20%20const%20userscript%20=%20userscripts[i];\n%20%20%20%20%20%20%20%20%20%20%20%20const%20includeData%20=%20includes[i];\n\n%20%20%20%20%20%20%20%20%20%20%20%20if%20(!doesMatch(includeData,%20location.href))%20{%20continue;%20}\n\n%20%20%20%20%20%20%20%20%20%20%20%20try%20{\n%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20window.eval(userscript);\n%20%20%20%20%20%20%20%20%20%20%20%20}%20catch%20(err)%20{%20console.error(err);%20}\n%20%20%20%20%20%20%20%20}\n\n%20%20%20%20%20%20%20%20//%20@ts-ignore\n%20%20%20%20%20%20%20%20delete%20window.isRunningAsBookmarkletUserscript;\n%20%20%20%20}\n\n%20%20%20%20function%20doesMatch(includesData,%20url)%20{\n%20%20%20%20%20%20%20%20const%20[includes,%20excludes]%20=%20includesData;\n\n%20%20%20%20%20%20%20%20for%20(const%20exclude%20of%20excludes)%20{\n%20%20%20%20%20%20%20%20%20%20%20%20if%20(patternMatchesURL(exclude,%20url))%20{\n%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20false;\n%20%20%20%20%20%20%20%20%20%20%20%20}\n%20%20%20%20%20%20%20%20}\n\n%20%20%20%20%20%20%20%20for%20(const%20include%20of%20includes)%20{\n%20%20%20%20%20%20%20%20%20%20%20%20if%20(patternMatchesURL(include,%20url))%20{\n%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20true;\n%20%20%20%20%20%20%20%20%20%20%20%20}\n%20%20%20%20%20%20%20%20}\n\n%20%20%20%20%20%20%20%20return%20includes.length%20===%200;\n%20%20%20%20}\n\n%20%20%20%20function%20patternMatchesURL(pattern,%20url)%20{\n%20%20%20%20%20%20%20%20let%20regex;\n\n%20%20%20%20%20%20%20%20if%20(pattern.startsWith(\%22/\%22)%20&&%20pattern.endsWith(\%22/\%22))%20{\n%20%20%20%20%20%20%20%20%20%20%20%20regex%20=%20new%20RegExp(pattern.slice(1,%20-1));\n%20%20%20%20%20%20%20%20}%20else%20{\n%20%20%20%20%20%20%20%20%20%20%20%20regex%20=%20patternStrToRegex(pattern);\n%20%20%20%20%20%20%20%20}\n\n%20%20%20%20%20%20%20%20return%20regex.test(url);\n%20%20%20%20}\n\n%20%20%20%20const%20specialCharacters%20=%20[\n%20%20%20%20%20%20%20%20\%22\\\\\%22,%20\%22.\%22,%20\%22+\%22,%20\%22?\%22,%20\%22^\%22,%20\%22$\%22,%20\%22(\%22,%20\%22)\%22,%20\%22[\%22,%20\%22]\%22,%20\%22{\%22,%20\%22}\%22,%20\%22|\%22\n%20%20%20%20];\n%20%20%20%20const%20specialCharactersRegex%20=%20specialCharacters.map(c%20=%3E%20new%20RegExp(\%22\\\\\%22%20+%20c,%20\%22g\%22));\n\n%20%20%20%20function%20patternStrToRegex(pattern)%20{\n%20%20%20%20%20%20%20%20let%20regexStr%20=%20pattern;\n%20%20%20%20%20%20%20%20for%20(let%20i%20=%200;%20i%20%3C%20specialCharacters.length;%20i++)%20{\n%20%20%20%20%20%20%20%20%20%20%20%20const%20specialChar%20=%20specialCharacters[i];\n%20%20%20%20%20%20%20%20%20%20%20%20const%20specialCharRegexp%20=%20specialCharactersRegex[i];\n%20%20%20%20%20%20%20%20%20%20%20%20regexStr%20=%20regexStr.replace(specialCharRegexp,%20\%22\\\\\%22%20+%20specialChar);\n%20%20%20%20%20%20%20%20}\n%20%20%20%20%20%20%20%20return%20new%20RegExp(\%22^\%22%20+%20regexStr.replace(/\\*/g,%20\%22.*\%22)%20+%20\%22$\%22,%20\%22i\%22);\n%20%20%20%20}\n\n%20%20%20%20run();\n}());\n%22)
